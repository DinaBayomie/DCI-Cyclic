/* Receipt model for 100 case */
//		Transition t1 = new Transition("Confirmation of receipt");
//		Transition t2 = new Transition("T02 Check confirmation of receipt");
//		Transition t3 = new Transition("T04 Determine confirmation of receipt");
//		Transition t4 = new Transition(
//				"T05 Print and send confirmation of receipt");
//		Transition t5 = new Transition("T07-1 Draft intern advice aspect 1");
//		Transition t6 = new Transition("T08 Draft and send request for advice");
//		Transition t7 = new Transition(
//				"T09-1 Process or receive external advice from party 1");
//		Transition t8 = new Transition("T06 Determine necessity of stop advice");
//		Transition t9 = new Transition(
//				"T10 Determine necessity to stop indication");
//		Transition t10 = new Transition("T16 Report reasons to hold request");
//		Transition t11 = new Transition("T17 Check report Y to stop indication");
//		Transition t12 = new Transition(
//				"T19 Determine report Y to stop indication");
//		Transition t13 = new Transition("T20 Print report Y to stop indication");
//		Transition t14 = new Transition(
//				"T11 Create document X request unlicensed");
//		Transition t15 = new Transition(
//				"T12 Check document X request unlicensed");
//		Transition t16 = new Transition(
//				"T14 Determine document X request unlicensed");
//		Transition t17 = new Transition(
//				"T15 Print document X request unlicensed");
//
//		Transition tt1 = new Transition("tau from tree");
//		Transition tt2 = new Transition("tau from tree");
//		Transition tt3 = new Transition("tau from tree");
//		Transition tt4 = new Transition("tau from tree");
//		Transition tt5 = new Transition("tau from tree");
//		Transition tt6 = new Transition("tau from tree");
//		Transition tt7 = new Transition("tau from tree");
//		Transition tt8 = new Transition("tau from tree");
//		Transition tt9 = new Transition("tau from tree");
//
//		net1.addNode(t1);
//		net1.addNode(t2);
//		net1.addNode(t3);
//		net1.addNode(t4);
//		net1.addNode(t5);
//		net1.addNode(t6);
//		net1.addNode(t7);
//		net1.addNode(t8);
//		net1.addNode(t9);
//		net1.addNode(t10);
//		net1.addNode(t11);
//		net1.addNode(t12);
//		net1.addNode(t13);
//		net1.addNode(t14);
//		net1.addNode(t15);
//		net1.addNode(t16);
//		net1.addNode(t17);
//
//		net1.addNode(tt1);
//		net1.addNode(tt2);
//		net1.addNode(tt3);
//		net1.addNode(tt4);
//		net1.addNode(tt5);
//		net1.addNode(tt6);
//		net1.addNode(tt7);
//		net1.addNode(tt8);
//		net1.addNode(tt9);
//
//		Place p1 = new Place("1");
//		Place p2 = new Place("2");
//		Place p3 = new Place("3");
//		Place p4 = new Place("4");
//		Place p5 = new Place("5");
//		Place p6 = new Place("6");
//		Place p7 = new Place("7");
//		Place p8 = new Place("8");
//		Place p9 = new Place("9");
//		Place p10 = new Place("10");
//		Place p11 = new Place("11");
//		Place p12 = new Place("12");
//		Place p13 = new Place("13");
//		Place p14 = new Place("14");
//		Place p15 = new Place("15");
//		Place p16 = new Place("16");
//		Place p17 = new Place("17");
//		Place p18 = new Place("18");
//
//		net1.addNode(p1);
//		net1.addNode(p2);
//		net1.addNode(p3);
//		net1.addNode(p4);
//		net1.addNode(p5);
//		net1.addNode(p6);
//		net1.addNode(p7);
//		net1.addNode(p8);
//		net1.addNode(p9);
//		net1.addNode(p10);
//		net1.addNode(p11);
//		net1.addNode(p12);
//		net1.addNode(p13);
//		net1.addNode(p14);
//		net1.addNode(p15);
//		net1.addNode(p16);
//		net1.addNode(p17);
//		net1.addNode(p18);
//
//		net1.addFlow(p1, t1);
//		net1.addFlow(t1, p2);
//		net1.addFlow(p2, tt1);
//		net1.addFlow(p2, tt2);
//		net1.addFlow(tt2, p3);
//		net1.addFlow(p3, t2);
//		net1.addFlow(t2, p4);
//		net1.addFlow(p4, t3);
//		net1.addFlow(t3, p5);
//		net1.addFlow(p5, t4);
//		net1.addFlow(t4, p6);
//		net1.addFlow(p6, t5);
//		net1.addFlow(p6, tt3);
//		net1.addFlow(t5, p7);
//		net1.addFlow(tt3, p7);
//		net1.addFlow(p7, t6);
//		net1.addFlow(p7, tt4);
//		net1.addFlow(t6, p8);
//		net1.addFlow(tt4, p8);
//		net1.addFlow(p8, t7);
//		net1.addFlow(p8, tt5);
//		net1.addFlow(t7, p9);
//		net1.addFlow(tt5, p9);
//		net1.addFlow(p9, t8);
//		net1.addFlow(t8,p10);
//		net1.addFlow(p10, t9);
//		net1.addFlow(t9, p11);
//		
//		net1.addFlow(tt1, p11);
//		
//		net1.addFlow(p11, tt6);
//		net1.addFlow(p11, t10);
//		net1.addFlow(p11, t14);
//		
//		net1.addFlow(tt6, p18);
//		
//		net1.addFlow(t10,p12);
//		net1.addFlow(p12,t11);
//		net1.addFlow(t11,p13);
//		net1.addFlow(p13,t12);
//		net1.addFlow(t12,p14);
//		net1.addFlow(p14,t13);
//		net1.addFlow(t13,p18);
//		
//		net1.addFlow(t14,p15);
//		net1.addFlow(p15,t15);
//		net1.addFlow(p15,tt7);
//		net1.addFlow(t15,p16);
//		net1.addFlow(tt7,p16);
//		net1.addFlow(p16,t16);
//		net1.addFlow(p16,tt8);
//		net1.addFlow(t16,p17);
//		net1.addFlow(tt8,p17);
//		net1.addFlow(p17,t17);
//		net1.addFlow(p17,tt9);
//		net1.addFlow(t17,p18);
//		net1.addFlow(tt9,p18);
		
		Transition t1 = new Transition("Confirmation of receipt");
		Transition t2 = new Transition("T16 Report reasons to hold request");
		Transition t3 = new Transition("T17 Check report Y to stop indication");
		Transition t4 = new Transition(
				"T19 Determine report Y to stop indication");
		Transition t5 = new Transition("T20 Print report Y to stop indication");
		Transition t6 = new Transition("T07-5 Draft intern advice aspect 5");
		Transition t7 = new Transition(
				"T07-1 Draft intern advice aspect 1");
		Transition t8 = new Transition("T09-1 Process or receive external advice from party 1");
		Transition t9 = new Transition(
				"T07-3 Draft intern advice hold for aspect 3");
		Transition t10 = new Transition("T07-4 Draft internal advice to hold for type 4");
		Transition t11 = new Transition("T07-2 Draft intern advice aspect 2");
		Transition t12 = new Transition(
				"T08 Draft and send request for advice");
		Transition t13 = new Transition("T09-3 Process or receive external advice from party 3");
		Transition t14 = new Transition(
				"T09-4 Process or receive external advice from party 4");
		Transition t15 = new Transition(
				"T02 Check confirmation of receipt");
		Transition t16 = new Transition(
				"T04 Determine confirmation of receipt");
		Transition t17 = new Transition(
				"T05 Print and send confirmation of receipt");
		Transition t18 = new Transition(
				"T06 Determine necessity of stop advice");
		Transition t19 = new Transition(
				"T10 Determine necessity to stop indication");
		Transition t20 = new Transition(
				"T14 Determine document X request unlicensed");
		Transition t21 = new Transition(
				"T15 Print document X request unlicensed");

		Transition tt1 = new Transition("tau from tree");
		Transition tt2 = new Transition("tau from tree");
		Transition tt3 = new Transition("tau from tree");
		Transition tt4 = new Transition("tau from tree");
		Transition tt5 = new Transition("tau from tree");
		Transition tt6 = new Transition("tau from tree");
		Transition tt7 = new Transition("tau from tree");
		Transition tt8 = new Transition("tau from tree");
		Transition tt9 = new Transition("tau from tree");
		Transition tt10 = new Transition("tau from tree");
		Transition tt11 = new Transition("tau from tree");
		Transition tt12 = new Transition("tau from tree");
		Transition tt13 = new Transition("tau from tree");
		Transition tt14 = new Transition("tau from tree");
		Transition tt15 = new Transition("tau from tree");

		net1.addNode(t1);
		net1.addNode(t2);
		net1.addNode(t3);
		net1.addNode(t4);
		net1.addNode(t5);
		net1.addNode(t6);
		net1.addNode(t7);
		net1.addNode(t8);
		net1.addNode(t9);
		net1.addNode(t10);
		net1.addNode(t11);
		net1.addNode(t12);
		net1.addNode(t13);
		net1.addNode(t14);
		net1.addNode(t15);
		net1.addNode(t16);
		net1.addNode(t17);
		net1.addNode(t18);
		net1.addNode(t19);
		net1.addNode(t20);
		net1.addNode(t21);

		net1.addNode(tt1);
		net1.addNode(tt2);
		net1.addNode(tt3);
		net1.addNode(tt4);
		net1.addNode(tt5);
		net1.addNode(tt6);
		net1.addNode(tt7);
		net1.addNode(tt8);
		net1.addNode(tt9);
		net1.addNode(tt10);
		net1.addNode(tt11);
		net1.addNode(tt12);
		net1.addNode(tt13);
		net1.addNode(tt14);
		net1.addNode(tt15);

		Place p1 = new Place("1");
		Place p2 = new Place("2");
		Place p3 = new Place("3");
		Place p4 = new Place("4");
		Place p5 = new Place("5");
		Place p6 = new Place("6");
		Place p7 = new Place("7");
		Place p8 = new Place("8");
		Place p9 = new Place("9");
		Place p10 = new Place("10");
		Place p11 = new Place("11");
		Place p12 = new Place("12");
		Place p13 = new Place("13");
		Place p14 = new Place("14");
		Place p15 = new Place("15");
		Place p16 = new Place("16");
		Place p17 = new Place("17");
		Place p18 = new Place("18");
		Place p19 = new Place("19");
		Place p20 = new Place("20");
		Place p21 = new Place("21");
		Place p22 = new Place("22");
		Place p23 = new Place("23");
		Place p24 = new Place("24");
		Place p25 = new Place("25");
		Place p26 = new Place("26");

		net1.addNode(p1);
		net1.addNode(p2);
		net1.addNode(p3);
		net1.addNode(p4);
		net1.addNode(p5);
		net1.addNode(p6);
		net1.addNode(p7);
		net1.addNode(p8);
		net1.addNode(p9);
		net1.addNode(p10);
		net1.addNode(p11);
		net1.addNode(p12);
		net1.addNode(p13);
		net1.addNode(p14);
		net1.addNode(p15);
		net1.addNode(p16);
		net1.addNode(p17);
		net1.addNode(p18);
		net1.addNode(p19);
		net1.addNode(p20);
		net1.addNode(p21);
		net1.addNode(p22);
		net1.addNode(p23);
		net1.addNode(p24);
		net1.addNode(p25);
		net1.addNode(p26);
		
		
		net1.addFlow(p1, t1);
		net1.addFlow(t1,p2);
		net1.addFlow(p2, tt1);
		net1.addFlow(p2, tt2);
		net1.addFlow(p2, tt3);
		net1.addFlow(p2, t2);
		net1.addFlow(p2, t6);
		
		
		net1.addFlow(tt2,p16);
		
		
		net1.addFlow(tt1,p24);
		
		
		net1.addFlow(tt3,p6);
		net1.addFlow(t6,p6);
		net1.addFlow(p6,tt4);
		net1.addFlow(p6,t7);
		net1.addFlow(tt4,p7);
		net1.addFlow(t7,p7);
		net1.addFlow(p7,tt5);
		net1.addFlow(tt5,p8);
		net1.addFlow(tt5,p10);
		
		net1.addFlow(p8,t12);
		net1.addFlow(t12,p9);
		net1.addFlow(p9,tt10);
		
		net1.addFlow(p10,tt6);
		net1.addFlow(p10,t8);
		net1.addFlow(tt6,p11);
		net1.addFlow(t8,p11);
		net1.addFlow(p11,tt7);
		net1.addFlow(p11,t9);
		net1.addFlow(tt7,p12);
		net1.addFlow(t9,p12);
		net1.addFlow(p12,tt8);
		net1.addFlow(p12,t10);
		net1.addFlow(tt8,p13);
		net1.addFlow(t10,p13);
		net1.addFlow(p13,tt9);
		net1.addFlow(p13,t11);
		net1.addFlow(tt9,p14);
		net1.addFlow(t11,p14);
		net1.addFlow(p14,tt10);
		
		net1.addFlow(tt10,p15);
		net1.addFlow(p15,t13);
		net1.addFlow(p15,t14);
		net1.addFlow(p15,tt11);
		net1.addFlow(t13,p16);
		net1.addFlow(t14,p16);
		net1.addFlow(tt11,p16);
		
		
		net1.addFlow(t2, p3);
		net1.addFlow(p3,t3);
		net1.addFlow(t3,p4);
		net1.addFlow(p4,t4);
		net1.addFlow(t4,p5);
		net1.addFlow(p5,t5);
		net1.addFlow(t5,p16);
		
		net1.addFlow(p16,tt12);
		net1.addFlow(tt12,p17);
		net1.addFlow(tt12,p20);
		
		net1.addFlow(p17,t18);
		net1.addFlow(t18,p18);
		net1.addFlow(p18,t19);
		net1.addFlow(t19,p19);
		net1.addFlow(p19,tt13);
		
		net1.addFlow(p20,t15);
		net1.addFlow(t15,p21);
		net1.addFlow(p21,t16);
		net1.addFlow(t16,p22);
		net1.addFlow(p22,t17);
		net1.addFlow(t17,p23);
		net1.addFlow(p23,tt13);
		net1.addFlow(tt13,p24);
		
		
		net1.addFlow(p24,tt14);
		net1.addFlow(p24,t20);
		net1.addFlow(tt14,p25);
		net1.addFlow(t20,p25);
		net1.addFlow(p25,tt15);
		net1.addFlow(p25,t21);
		net1.addFlow(tt15,p26);
		net1.addFlow(t21,p26);
		
		
		
